---

- name: Check the state of the new kubectl package
  stat:
    path: "{{ kubectl_install_dir }}/kubectl"
  register: kubectl_check_installed

- name: Fail play if kubectl is not installed as expected
  assert:
    that:
      - kubectl_check_installed.stat.exists
      - kubectl_check_installed.stat.islnk
    fail_msg: kubectl was not installed as expected, it is likely something went wrong.
    success_msg: kubectl has been installed as expected.

- name: Check the kubectl binary version matches the expected version
  shell: >
    set -o pipefail && \
      {{ kubectl_install_dir }}/kubectl version --client --short | \
      awk '{ print $NF }' | sed 's/^v//'
  args:
    executable: "{{ kubectl_check_bash_path.stdout_lines[0] }}"
  changed_when: false
  failed_when: false
  register: kubectl_check_installed_version

- name: Fail play if kubectl is not the expected version
  assert:
    that:
      - kubectl_check_installed_version.stdout_lines[0] == kubectl_version
    fail_msg: Installed kubectl version is not as expected, it is likely something went wrong.
    success_msg: Installed kubectl version is as expected.
